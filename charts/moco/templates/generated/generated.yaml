apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "moco.name" . }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "moco.chart" . }}'
  name: moco-controller-manager
  namespace: '{{ .Release.Namespace }}'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "moco.name" . }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "moco.chart" . }}'
  name: moco-leader-election-role
  namespace: '{{ .Release.Namespace }}'
rules:
  - apiGroups:
      - ""
      - coordination.k8s.io
    resources:
      - configmaps
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "moco.name" . }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "moco.chart" . }}'
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: moco-backuppolicy-editor-role
rules:
  - apiGroups:
      - moco.cybozu.com
    resources:
      - backuppolicies
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - moco.cybozu.com
    resources:
      - backuppolicies/status
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "moco.name" . }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "moco.chart" . }}'
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: moco-backuppolicy-viewer-role
rules:
  - apiGroups:
      - moco.cybozu.com
    resources:
      - backuppolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - moco.cybozu.com
    resources:
      - backuppolicies/status
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "moco.name" . }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "moco.chart" . }}'
  name: moco-manager-role
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps/status
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets/status
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - serviceaccounts/status
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - get
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets/status
    verbs:
      - get
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - jobs
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - cert-manager.io
    resources:
      - certificates
    verbs:
      - create
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - moco.cybozu.com
    resources:
      - backuppolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - moco.cybozu.com
    resources:
      - mysqlclusters
    verbs:
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - moco.cybozu.com
    resources:
      - mysqlclusters/finalizers
    verbs:
      - update
  - apiGroups:
      - moco.cybozu.com
    resources:
      - mysqlclusters/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
      - roles
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "moco.name" . }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "moco.chart" . }}'
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: moco-mysqlcluster-editor-role
rules:
  - apiGroups:
      - moco.cybozu.com
    resources:
      - mysqlclusters
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - moco.cybozu.com
    resources:
      - mysqlclusters/status
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "moco.name" . }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "moco.chart" . }}'
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: moco-mysqlcluster-viewer-role
rules:
  - apiGroups:
      - moco.cybozu.com
    resources:
      - mysqlclusters
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - moco.cybozu.com
    resources:
      - mysqlclusters/status
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "moco.name" . }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "moco.chart" . }}'
  name: moco-leader-election-rolebinding
  namespace: '{{ .Release.Namespace }}'
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: moco-leader-election-role
subjects:
  - kind: ServiceAccount
    name: moco-controller-manager
    namespace: '{{ .Release.Namespace }}'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "moco.name" . }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "moco.chart" . }}'
  name: moco-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: moco-manager-role
subjects:
  - kind: ServiceAccount
    name: moco-controller-manager
    namespace: '{{ .Release.Namespace }}'
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "moco.name" . }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "moco.chart" . }}'
  name: moco-webhook-service
  namespace: '{{ .Release.Namespace }}'
spec:
  ports:
    - port: 443
      targetPort: webhook-server
  selector:
    app.kubernetes.io/component: moco-controller
    app.kubernetes.io/name: '{{ include "moco.name" . }}'
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: '{{ .Release.Namespace }}/moco-serving-cert'
  labels:
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "moco.name" . }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "moco.chart" . }}'
  name: moco-mutating-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: moco-webhook-service
        namespace: '{{ .Release.Namespace }}'
        path: /mutate-moco-cybozu-com-v1beta2-mysqlcluster
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: mmysqlcluster.kb.io
    rules:
      - apiGroups:
          - moco.cybozu.com
        apiVersions:
          - v1beta2
        operations:
          - CREATE
        resources:
          - mysqlclusters
    sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: '{{ .Release.Namespace }}/moco-serving-cert'
  labels:
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "moco.name" . }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "moco.chart" . }}'
  name: moco-validating-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: moco-webhook-service
        namespace: '{{ .Release.Namespace }}'
        path: /validate-moco-cybozu-com-v1beta2-backuppolicy
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: vbackuppolicy.kb.io
    rules:
      - apiGroups:
          - moco.cybozu.com
        apiVersions:
          - v1beta2
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - backuppolicies
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: moco-webhook-service
        namespace: '{{ .Release.Namespace }}'
        path: /validate-moco-cybozu-com-v1beta2-mysqlcluster
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: vmysqlcluster.kb.io
    rules:
      - apiGroups:
          - moco.cybozu.com
        apiVersions:
          - v1beta2
        operations:
          - CREATE
          - UPDATE
        resources:
          - mysqlclusters
    sideEffects: None
