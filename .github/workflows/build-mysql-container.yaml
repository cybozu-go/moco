name: "Build mysql container"

on:
  pull_request:
    paths:
      - "containers/mysql/**"
      - ".github/workflows/build-mysql-container.yaml"
      - "!**.md"
  push:
    branches:
      - 'main'
    paths:
      - "containers/mysql/**"
      - ".github/workflows/build-mysql-container.yaml"
      - "!**.md"

jobs:
  tests:
    if: github.event_name == 'pull_request'
    runs-on: ${{ vars.IMAGE_BUILD_RUNNER || 'ubuntu-20.04' }}
    strategy:
      matrix:
        mysql-version: [ "8.0.18", "8.0.25", "8.0.26", "8.0.27", "8.0.28", "8.0.30", "8.0.31", "8.0.32" ]
        k8s-version: [ "1.27.1" ]
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
        with:
          driver: docker # refs: https://github.com/docker/build-push-action/issues/321

      - name: Check TAG file
        working-directory: containers
        run: |
          result="$(./tag_exists moco/mysql mysql/${{ matrix.mysql-version }})"
          if [ "$result" = ok ]; then
            exit 1
          fi
          echo "TAG=$(cat ./mysql/${{ matrix.mysql-version }}/TAG)" >> $GITHUB_ENV

      - uses: docker/build-push-action@v4
        with:
          context: containers/mysql/${{ matrix.mysql-version }}/.
          push: false
          load: true
          tags: |
            ghcr.io/cybozu-go/moco/mysql:${{ env.TAG }}
            ghcr.io/cybozu-go/moco/mysql:${{ matrix.mysql-version }}

      - name: Install Container Structure Tests
        run: |
          VERSION=v1.15.0
          curl -LO "https://storage.googleapis.com/container-structure-test/$VERSION/container-structure-test-linux-amd64" \
            && chmod +x container-structure-test-linux-amd64 \
            && sudo mv container-structure-test-linux-amd64 /usr/local/bin/container-structure-test
      - name: Run Container Structure Tests
        run: |
          container-structure-test test --image ghcr.io/cybozu-go/moco/mysql:${{ matrix.mysql-version }} --config ./containers/mysql/${{ matrix.mysql-version }}/container-structure-test.yaml

      - name: Create kind cluster
        run: kind create cluster --name=moco --config=./e2e/kind-config_actions.yaml --image=kindest/node:v${{ matrix.k8s-version }} --wait 1m

      - name: Load mysqld image
        run: kind load docker-image ghcr.io/cybozu-go/moco/mysql:${{ matrix.mysql-version }} --name moco

      - name: Install MOCO
        run: |
          kubectl apply -f https://github.com/jetstack/cert-manager/releases/latest/download/cert-manager.yaml
          kubectl -n cert-manager wait --for=condition=available --timeout=180s --all deployments
          kubectl apply -f https://github.com/cybozu-go/moco/releases/latest/download/moco.yaml
          kubectl -n moco-system wait --for=condition=available --timeout=180s --all deployments

      - name: Create MySQLCluster
        run: |
          cat > mycluster.yaml <<'EOF'
          apiVersion: moco.cybozu.com/v1beta1
          kind: MySQLCluster
          metadata:
            namespace: default
            name: test
          spec:
            replicas: 3
            podTemplate:
              spec:
                containers:
                  - name: mysqld
                    image: ghcr.io/cybozu-go/moco/mysql:${{ matrix.mysql-version }}
            volumeClaimTemplates:
              - metadata:
                  name: mysql-data
                spec:
                  accessModes: [ "ReadWriteOnce" ]
                  resources:
                    requests:
                      storage: 1Gi
          EOF
          kubectl apply -f mycluster.yaml

      - name: Wait for MySQLCluster
        run: kubectl wait -n default --for=condition=Available mysqlcluster/test --timeout=180s

  build:
    if: github.ref == 'refs/heads/main'
    runs-on: ${{ vars.IMAGE_BUILD_RUNNER || 'ubuntu-20.04' }}
    strategy:
      matrix:
        mysql-version: [ "8.0.18", "8.0.25", "8.0.26", "8.0.27", "8.0.28", "8.0.30", "8.0.31", "8.0.32" ]
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check TAG file
        working-directory: containers
        run: |
          result="$(./tag_exists moco/mysql mysql/${{ matrix.mysql-version }})"
          if [ "$result" = ok ]; then
            exit 1
          fi
          echo "TAG=$(cat ./mysql/${{ matrix.mysql-version }}/TAG)" >> $GITHUB_ENV

      - uses: docker/build-push-action@v4
        with:
          context: containers/mysql/${{ matrix.mysql-version }}/.
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/cybozu-go/moco/mysql:${{ env.TAG }}
            ghcr.io/cybozu-go/moco/mysql:${{ matrix.mysql-version }}
